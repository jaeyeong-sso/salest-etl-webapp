<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/batch	http://www.springframework.org/schema/batch/spring-batch.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<import resource="spring-hadoop-service.xml" />

	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
	
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
 	</bean>
 	
	<!-- create job-meta tables automatically -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:org/springframework/batch/core/schema-drop-mysql.sql" />
		<jdbc:script location="classpath:org/springframework/batch/core/schema-mysql.sql" />
	</jdbc:initialize-database>
 	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"/>
	</bean>

	<bean class="org.springframework.batch.core.scope.StepScope">
        <property name="proxyTargetClass" value="true"/>
    </bean>
  
	<batch:job id="testJob">
	
		<batch:step id="cleanup" next="mrjob">
			<batch:tasklet ref="cleanup-tasklet"/>
	    </batch:step>
	    
	    <batch:step id="mrjob" next="loadToMySQL">
	      <batch:tasklet ref="mrjob-tasklet"/>
	    </batch:step>
	    
		<batch:step id="loadToMySQL" next="endup">  
			<batch:tasklet transaction-manager="transactionManager">  
				<batch:chunk reader="hdfsReader" writer="databaseItemWriter" commit-interval="2"/>  
			</batch:tasklet>  
		</batch:step> 
		
	    <batch:step id="endup">
	       <batch:tasklet ref="setup-tasklet" />
	    </batch:step>
	    
	    <batch:listeners>
	    	<batch:listener>
	    		<bean class="com.salest.etl.adminconsole.batch.DailyTrSumJobExecutionListener"/>
	    	</batch:listener>
	    </batch:listeners>
    
	</batch:job>
	
	
	<!-- Typical ETL process -->
	<bean id="DailyTrSummary" class="com.salest.etl.adminconsole.batch.model.DailyTrSummary" scope="prototype"></bean>  

	<bean id="hdfsReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step" >
		<property name="resources" value="${hd.fs}/${daily_tr_agg.output.path}/part-r-00000"/>
		<property name="delegate" ref="cvsItemReader"/>
	</bean>
	
	<bean id="cvsItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">  
		<!--
		<property name="resource" value="classpath:part-r-00000" />  
		-->  
		<property name="lineMapper">  
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">  
				<property name="lineTokenizer">  
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">  
						<property name="names" value="date,num_of_order,total_amount" />
						<property name="delimiter">
						    <util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB"/>
						</property>
					</bean>  
				</property>  
				<property name="fieldSetMapper">     
					<bean class="com.salest.etl.adminconsole.batch.model.DailyTrSummaryFieldSetMapper" />  
				</property>  
			</bean>  
		</property>  
	</bean>  

<!--   
	<bean id="cvsItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">  
		<property name="resource" value="classpath:part-r-00000" />  
		<property name="lineMapper">  
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">  
				<property name="lineTokenizer">  
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">  
						<property name="names" value="date,num_of_order,total_amount" />  
					</bean>  
				</property>  
				<property name="fieldSetMapper">     
					<bean class="com.salest.etl.adminconsole.batch.model.DailyTrSummaryFieldSetMapper" />  
				</property>  
			</bean>  
		</property>  
	</bean>  
-->     

	<bean id="databaseItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">  
		<property name="dataSource" ref="dataSource" />  
		<property name="sql">  
			<value>  
	            <![CDATA[         
	              insert into daily_tr_summary(date,num_of_order,total_amount) values (:date,:num_of_order,:total_amount) 
	             ]]>  
			</value>  
		</property>  
 		<!-- It will take care matching between object property and sql name parameter -->  
 		<property name="itemSqlParameterSourceProvider">  
   			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />  
  		</property>  
    </bean>  
	
</beans>